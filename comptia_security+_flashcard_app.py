 -*- coding: utf-8 -*-
"""AUgo CompTIA Security+ Flashcard App

Prompted, Compiled & Modified by UgoOkpala.
Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bYfsGQ9s3pJ2-sX6DkxIjQlLzllb00BD
"""

import tkinter as tk
import random

# --- CompTIA Security+ Acronyms and Definitions ---
# A dictionary holding common acronyms as keys and their full forms as values.
# You can easily add more acronyms to this dictionary.
ACRONYMS = {
    "AAA": "Authentication, Authorization, and Accounting",
    "ACL": "Access Control List",
    "AES": "Advanced Encryption Standard",
    "AH": "Authentication Header",
    "API": "Application Programming Interface",
    "APT": "Advanced Persistent Threat",
    "ARO": "Annualized Rate of Occurrence",
    "ARP": "Address Resolution Protocol",
    "AV": "Antivirus",
    "BIA": "Business Impact Analysis",
    "BGP": "Border Gateway Protocol",
    "BYOD": "Bring Your Own Device",
    "CA": "Certificate Authority",
    "CAC": "Common Access Card",
    "CAN": "Controller Area Network",
    "CBC": "Cipher Block Chaining",
    "CERT": "Computer Emergency Response Team",
    "CIA": "Confidentiality, Integrity, Availability",
    "CSO": "Chief Security Officer",
    "CSP": "Cloud Service Provider",
    "CSRF": "Cross-Site Request Forgery",
    "CVE": "Common Vulnerabilities and Exposures",
    "CVSS": "Common Vulnerability Scoring System",
    "DDoS": "Distributed Denial of Service",
    "DEP": "Data Execution Prevention",
    "DES": "Data Encryption Standard",
    "DHCP": "Dynamic Host Configuration Protocol",
    "DLL": "Dynamic Link Library",
    "DLP": "Data Loss Prevention",
    "DMZ": "Demilitarized Zone",
    "DNS": "Domain Name System",
    "DoS": "Denial of Service",
    "DRP": "Disaster Recovery Plan",
    "EAP": "Extensible Authentication Protocol",
    "ECC": "Elliptic Curve Cryptography",
    "EDR": "Endpoint Detection and Response",
    "EFS": "Encrypting File System",
    "ESP": "Encapsulating Security Payload",
    "FDE": "Full Disk Encryption",
    "FTP": "File Transfer Protocol",
    "GPG": "GNU Privacy Guard",
    "GPO": "Group Policy Object",
    "HA": "High Availability",
    "HDD": "Hard Disk Drive",
    "HIDS": "Host-based Intrusion Detection System",
    "HIPS": "Host-based Intrusion Prevention System",
    "HMAC": "Hashed Message Authentication Code",
    "HSM": "Hardware Security Module",
    "HTML": "Hypertext Markup Language",
    "HTTP": "Hypertext Transfer Protocol",
    "HTTPS": "Hypertext Transfer Protocol Secure",
    "HVAC": "Heating, Ventilation, and Air Conditioning",
    "IaaS": "Infrastructure as a Service",
    "IAM": "Identity and Access Management",
    "ICMP": "Internet Control Message Protocol",
    "IDS": "Intrusion Detection System",
    "IKE": "Internet Key Exchange",
    "IMAP": "Internet Message Access Protocol",
    "IoC": "Indicator of Compromise",
    "IoT": "Internet of Things",
    "IP": "Internet Protocol",
    "IPS": "Intrusion Prevention System",
    "IPsec": "Internet Protocol Security",
    "IR": "Incident Response",
    "ISO": "International Organization for Standardization",
    "ISP": "Internet Service Provider",
    "IV": "Initialization Vector",
    "KDC": "Key Distribution Center",
    "KEK": "Key Encryption Key",
    "L2TP": "Layer 2 Tunneling Protocol",
    "LAN": "Local Area Network",
    "LDAP": "Lightweight Directory Access Protocol",
    "MAC": "Mandatory Access Control / Media Access Control",
    "MaaS": "Monitoring as a Service",
    "MD5": "Message Digest 5",
    "MFA": "Multi-Factor Authentication",
    "MITM": "Man-in-the-Middle",
    "MOU": "Memorandum of Understanding",
    "MS-CHAP": "Microsoft Challenge-Handshake Authentication Protocol",
    "MSP": "Managed Service Provider",
    "NAC": "Network Access Control",
    "NAT": "Network Address Translation",
    "NDA": "Non-Disclosure Agreement",
    "NFC": "Near Field Communication",
    "NIDS": "Network-based Intrusion Detection System",
    "NIPS": "Network-based Intrusion Prevention System",
    "NIST": "National Institute of Standards and Technology",
    "NTFS": "New Technology File System",
    "OCSP": "Online Certificate Status Protocol",
    "OS": "Operating System",
    "OSI": "Open Systems Interconnection",
    "OSINT": "Open-Source Intelligence",
    "OTP": "One-Time Pad / One-Time Password",
    "OWASP": "Open Web Application Security Project",
    "PaaS": "Platform as a Service",
    "PAM": "Pluggable Authentication Modules",
    "PAP": "Password Authentication Protocol",
    "PCI DSS": "Payment Card Industry Data Security Standard",
    "PGP": "Pretty Good Privacy",
    "PII": "Personally Identifiable Information",
    "PKI": "Public Key Infrastructure",
    "PoC": "Proof of Concept",
    "POP": "Post Office Protocol",
    "PUP": "Potentially Unwanted Program",
    "QoS": "Quality of Service",
    "RA": "Registration Authority",
    "RADIUS": "Remote Authentication Dial-In User Service",
    "RAID": "Redundant Array of Independent Disks",
    "RAS": "Remote Access Service",
    "RAT": "Remote Access Trojan",
    "RC4": "Rivest Cipher 4",
    "RDP": "Remote Desktop Protocol",
    "RFID": "Radio-Frequency Identification",
    "RIPEMD": "RACE Integrity Primitives Evaluation Message Digest",
    "ROI": "Return on Investment",
    "RPO": "Recovery Point Objective",
    "RTO": "Recovery Time Objective",
    "SaaS": "Software as a Service",
    "SAML": "Security Assertion Markup Language",
    "SCADA": "Supervisory Control and Data Acquisition",
    "SCAP": "Security Content Automation Protocol",
    "SCEP": "Simple Certificate Enrollment Protocol",
    "SDK": "Software Development Kit",
    "SDLC": "Software Development Life Cycle",
    "SED": "Self-Encrypting Drive",
    "SEH": "Structured Exception Handling",
    "SFTP": "Secure File Transfer Protocol",
    "SHA": "Secure Hash Algorithm",
    "SIEM": "Security Information and Event Management",
    "SLA": "Service Level Agreement",
    "SLE": "Single Loss Expectancy",
    "SMTP": "Simple Mail Transfer Protocol",
    "SNMP": "Simple Network Management Protocol",
    "SOAP": "Simple Object Access Protocol",
    "SOAR": "Security Orchestration, Automation, and Response",
    "SOC": "Security Operations Center",
    "SPF": "Sender Policy Framework",
    "SPIM": "Spam over Instant Messaging",
    "SQL": "Structured Query Language",
    "SQLi": "SQL Injection",
    "SSD": "Solid State Drive",
    "SSH": "Secure Shell",
    "SSID": "Service Set Identifier",
    "SSL": "Secure Sockets Layer",
    "SSO": "Single Sign-On",
    "STP": "Shielded Twisted Pair",
    "TACACS+": "Terminal Access Controller Access-Control System Plus",
    "TCP/IP": "Transmission Control Protocol/Internet Protocol",
    "TGT": "Ticket-Granting Ticket",
    "TKIP": "Temporal Key Integrity Protocol",
    "TLS": "Transport Layer Security",
    "TPM": "Trusted Platform Module",
    "UAT": "User Acceptance Testing",
    "UDP": "User Datagram Protocol",
    "UEFI": "Unified Extensible Firmware Interface",
    "URL": "Uniform Resource Locator",
    "USB": "Universal Serial Bus",
    "UTM": "Unified Threat Management",
    "UTP": "Unshielded Twisted Pair",
    "VDE": "Virtual Desktop Environment",
    "VDI": "Virtual Desktop Infrastructure",
    "VLAN": "Virtual Local Area Network",
    "VM": "Virtual Machine",
    "VoIP": "Voice over IP",
    "VPN": "Virtual Private Network",
    "WAF": "Web Application Firewall",
    "WAP": "Wireless Access Point",
    "WEP": "Wired Equivalent Privacy",
    "WIDS": "Wireless Intrusion Detection System",
    "WIPS": "Wireless Intrusion Prevention System",
    "WPA": "Wi-Fi Protected Access",
    "WPS": "Wi-Fi Protected Setup",
    "XSS": "Cross-Site Scripting",
}


class FlashcardApp:
    """
    The main class for the flashcard application.
    It handles the GUI setup and the application logic.
    """

    def __init__(self, master):
        """
        Initializes the application.
        :param master: The root tkinter window.
        """
        self.master = master
        master.title("CompTIA Security+ Acronym Flashcards")
        master.geometry("600x400") # Set a default size
        master.configure(bg='#2E3B4E') # Set a dark blue background color

        self.current_acronym = ""
        self.current_definition = ""
        self.is_flipped = False

        # --- GUI Elements ---

        # Frame to hold the card content
        self.card_frame = tk.Frame(master, bg='#4A5A71', padx=20, pady=20)
        self.card_frame.pack(pady=40, padx=20, fill="both", expand=True)

        # Label for the acronym (front of the card)
        self.acronym_label = tk.Label(
            self.card_frame, text="", font=("Helvetica", 48, "bold"),
            bg='#4A5A71', fg='white', wraplength=500
        )
        self.acronym_label.pack(pady=20, expand=True)

        # Label for the definition (back of the card)
        self.definition_label = tk.Label(
            self.card_frame, text="", font=("Helvetica", 28),
            bg='#4A5A71', fg='#A9C5E8', wraplength=500
        )
        self.definition_label.pack(pady=10, expand=True)

        # Frame for the control buttons
        self.button_frame = tk.Frame(master, bg='#2E3B4E')
        self.button_frame.pack(pady=20)

        # Button to flip the card
        self.flip_button = tk.Button(
            self.button_frame, text="Flip", command=self.flip_card,
            font=("Helvetica", 14), bg='#63A375', fg='midnightblue', relief='flat', padx=20, pady=10
        )
        self.flip_button.grid(row=0, column=0, padx=10)

        # Button to show the next card
        self.next_button = tk.Button(
            self.button_frame, text="Next", command=self.next_card,
            font=("Helvetica", 14), bg='#D96666', fg='green', relief='flat', padx=20, pady=10
        )
        self.next_button.grid(row=0, column=1, padx=10)

        # --- Initial Setup ---
        self.next_card() # Load the first card

    def next_card(self):
        """
        Selects a new random acronym and updates the card display.
        """
        self.is_flipped = False
        # Choose a random key (acronym) from the dictionary
        self.current_acronym = random.choice(list(ACRONYMS.keys()))
        self.current_definition = ACRONYMS[self.current_acronym]

        # Update the labels
        self.acronym_label.config(text=self.current_acronym)
        self.definition_label.config(text="") # Hide definition initially

    def flip_card(self):
        """
        Reveals the definition on the back of the card.
        """
        if not self.is_flipped:
            self.definition_label.config(text=self.current_definition)
            self.is_flipped = True


if __name__ == "__main__":
    # This block runs when the script is executed directly.
    root = tk.Tk()
    app = FlashcardApp(root)
    root.mainloop()
